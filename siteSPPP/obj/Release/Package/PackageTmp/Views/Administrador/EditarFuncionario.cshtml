@model siteSPPP.Models.SERVIDORESPUBLICOS

@{
    ViewBag.Title = "AgregarFuncionario";
    Layout = "~/Views/Shared/LayoutAuth.cshtml";
}

<h2>Editar información del funcionario</h2>

@using (Html.BeginForm("EditarFuncionario", "Administrador", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(s => s.IDSERVPUB)
    @Html.HiddenFor(s => s.CURRICULUM)
    @Html.HiddenFor(s => s.FOTOPERSONAL)
    @Html.HiddenFor(s => s.FECHAREGISTRO)

    <div class="form-horizontal text-left">
        <h4>Datos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.IDDEPARTAMENTO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDDEPARTAMENTO", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDDEPARTAMENTO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NOMBREPERSONAL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBREPERSONAL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOMBREPERSONAL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NOMBRAMIENTO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBRAMIENTO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NOMBRAMIENTO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CONMUTADOR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CONMUTADOR, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CONMUTADOR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EXTENSION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EXTENSION, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EXTENSION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CORREO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CORREO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CORREO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NIVEL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NIVEL, (SelectList)ViewBag.servidores ,"SELECCIONA SU DEPENDIENTE", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NIVEL, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ESTATUS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownListFor(m => m.ESTATUS,new SelectList(new[]
                       {
                           new SelectListItem { Value = "", Text ="SELECCIONE UNA OPCION"},
                           new SelectListItem { Value = "A", Text = "ACTIVO"},
                           new SelectListItem { Value = "I", Text = "INACTIVO"},
                       },"Value"
                       ,"Text"), new { @id = "listRegresa", @class = "" })
                    @Html.ValidationMessageFor(model => model.ESTATUS, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Volver a la Lista", "ListaFuncionarios")
                <input type="submit" value="Modificar" class="btn btn-default" />
            </div>
        </div>
    </div>
}
